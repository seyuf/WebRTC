# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
#application secrets
PLAY.CRYPTO.SECRET = "CHANGEME"
PLAY.INSTALL.SECRET = "TOBECHANGED"

# The application languages
# ~~~~~

lay.i18n {
  langs = [ "fr" ]
}

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.
cors.allowed.domain ="http://webrtc.local:8100"
 logger.root=DEBUG

play.cache.bindCaches = ["livetchat"]


 mongodb.uri = "mongodb://localhost:27017/mongo-v32?rm.tcpNoDelay=true&rm.nbChannelsPerNode=10"

 mongodb {
   db = "mongo-v32"
   servers = [ "localhost:27017" ]
 }

 play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
play.modules.enabled += "modules.MainBootModule"


 # Logger used by the framework:
 logger.play=DEBUG

 # Logger provided to your application:
 logger.application=DEBUG




 play {

   server {

     http {

       port = 9000
       port = ${?http.port}

       address = "0.0.0.0"
       address = ${?http.address}

       idleTimeout = infinite
     }


     akka {
       requestTimeout = infinite
     }

   }

    akka {
       event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
       loglevel = DEBUG
       stdout-loglevel = "off"
       actor {
         default-dispatcher = {
           executor = "fork-join-executor"

           fork-join-executor {
             parallelism-factor = 1.0
             parallelism-max = 1.0
           }

   #        thread-pool-executor {
   #	        keep-alive-time = 60s
   #          core-pool-size-min = 1
   #          core-pool-size-factor = 1.0
   #          core-pool-size-max = 1
   #          max-pool-size-min = 1
   #          max-pool-size-factor  = 1.0
   #          max-pool-size-max = 1
   #          task-queue-size = -1
   #          task-queue-type = "linked"
   #          allow-core-timeout = on
   #       }

         }
    }
 }
 }


  jvm-exit-on-fatal-error = on


play.filters.cors {
  allowedOrigins = null
  #allowedHttpMethods = ["GET", "POST"]
  #allowedHttpMethods = null
  #allowedHttpHeaders = null
  #supportsCredentials = true
  #pathPrefixes = ["/"]
  #preflightMaxAge = 1 hour
}









